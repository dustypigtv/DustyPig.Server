// <auto-generated />
using System;
using DustyPig.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DustyPig.Server.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220706161945_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("DustyPig.Server.Data.Models.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("FirebaseId")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.HasKey("Id");

                    b.HasIndex("FirebaseId")
                        .IsUnique();

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirebaseId = "TEST ACCOUNT"
                        });
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.AccountToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("AccountTokens");
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.ActivationCode", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)");

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.HasKey("Code");

                    b.HasIndex("AccountId");

                    b.ToTable("ActivationCodes");
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.DeviceToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("LastSeen")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("varchar(1024)");

                    b.HasKey("Id");

                    b.HasIndex("ProfileId");

                    b.ToTable("DeviceTokens");
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.FriendLibraryShare", b =>
                {
                    b.Property<int>("FriendshipId")
                        .HasColumnType("int");

                    b.Property<int>("LibraryId")
                        .HasColumnType("int");

                    b.Property<string>("LibraryDisplayName")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.HasKey("FriendshipId", "LibraryId");

                    b.HasIndex("LibraryId");

                    b.ToTable("FriendLibraryShares");
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.Friendship", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Accepted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Account1Id")
                        .HasColumnType("int");

                    b.Property<int>("Account2Id")
                        .HasColumnType("int");

                    b.Property<string>("DisplayName1")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("DisplayName2")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Hash")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.HasKey("Id");

                    b.HasIndex("Account1Id");

                    b.HasIndex("Account2Id");

                    b.HasIndex("Hash")
                        .IsUnique();

                    b.ToTable("Friendships");
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.GetRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<int>("EntryType")
                        .HasColumnType("int");

                    b.Property<int?>("ProfileId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TMDB_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProfileId");

                    b.HasIndex("AccountId", "EntryType", "TMDB_Id")
                        .IsUnique();

                    b.ToTable("GetRequests");
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.GetRequestSubscription", b =>
                {
                    b.Property<int>("GetRequestId")
                        .HasColumnType("int");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int");

                    b.HasKey("GetRequestId", "ProfileId");

                    b.HasIndex("ProfileId");

                    b.ToTable("GetRequestSubscriptions");
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.Library", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<bool>("IsTV")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("AccountId", "Name")
                        .IsUnique();

                    b.ToTable("Libraries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccountId = 1,
                            IsTV = false,
                            Name = "Movies"
                        },
                        new
                        {
                            Id = 2,
                            AccountId = 1,
                            IsTV = true,
                            Name = "TV Shows"
                        });
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.LogEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CallSite")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Exception")
                        .HasColumnType("longtext");

                    b.Property<string>("Level")
                        .HasMaxLength(12)
                        .HasColumnType("varchar(12)");

                    b.Property<string>("Logger")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Message")
                        .HasMaxLength(4000)
                        .HasColumnType("varchar(4000)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.MediaEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("Added")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ArtworkUrl")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("BackdropUrl")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("BifUrl")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<double?>("CreditsStartTime")
                        .HasColumnType("double");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasMaxLength(10000)
                        .HasColumnType("varchar(10000)");

                    b.Property<int>("EntryType")
                        .HasColumnType("int");

                    b.Property<int?>("Episode")
                        .HasColumnType("int");

                    b.Property<int?>("ExtraSortOrder")
                        .HasColumnType("int");

                    b.Property<long?>("Genres")
                        .HasColumnType("bigint");

                    b.Property<string>("Hash")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<double?>("IntroEndTime")
                        .HasColumnType("double");

                    b.Property<double?>("IntroStartTime")
                        .HasColumnType("double");

                    b.Property<double?>("Length")
                        .HasColumnType("double");

                    b.Property<int>("LibraryId")
                        .HasColumnType("int");

                    b.Property<int?>("LinkedToId")
                        .HasColumnType("int");

                    b.Property<double?>("Popularity")
                        .HasColumnType("double");

                    b.Property<DateTime?>("PopularityUpdated")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("Rated")
                        .HasColumnType("int");

                    b.Property<int?>("Season")
                        .HasColumnType("int");

                    b.Property<string>("SortTitle")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("TMDB_Id")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("VideoUrl")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<long?>("Xid")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("LinkedToId");

                    b.HasIndex("LibraryId", "EntryType", "TMDB_Id", "Hash")
                        .IsUnique();

                    b.ToTable("MediaEntries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Added = new DateTime(2021, 9, 6, 5, 20, 38, 399, DateTimeKind.Unspecified).AddTicks(9293),
                            ArtworkUrl = "https://s3.us-central-1.wasabisys.com/dustypig/media/Movies/Agent%20327_%20Operation%20Barbershop%20%282017%29.jpg",
                            BackdropUrl = "https://s3.us-central-1.wasabisys.com/dustypig/media/Movies/Agent%20327_%20Operation%20Barbershop%20%282017%29.backdrop.jpg",
                            BifUrl = "https://s3.us-central-1.wasabisys.com/dustypig/media/Movies/Agent%20327_%20Operation%20Barbershop%20%282017%29.bif",
                            CreditsStartTime = 205.875,
                            Date = new DateTime(2017, 5, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Agent 327 is investigating a clue that leads him to a shady barbershop in Amsterdam. Little does he know that he is being tailed by mercenary Boris Kloris.",
                            EntryType = 1,
                            Genres = 4195332L,
                            Hash = "4EA15C97603CE91602141FB1D5D04F5705311AEA6BB1FFD3B0AF4801BB7FE5A9B867B08AD8E2E90BBFCF70583E85EC20D9D0816E6B55FD34D16123A9F03624B1",
                            Length = 231.47999999999999,
                            LibraryId = 1,
                            Rated = 1,
                            SortTitle = "agent 327: operation barbershop",
                            TMDB_Id = 457784,
                            Title = "Agent 327: Operation Barbershop",
                            VideoUrl = "https://s3.us-central-1.wasabisys.com/dustypig/media/Movies/Agent%20327_%20Operation%20Barbershop%20%282017%29.mp4"
                        },
                        new
                        {
                            Id = 2,
                            Added = new DateTime(2021, 9, 6, 5, 20, 38, 454, DateTimeKind.Unspecified).AddTicks(1594),
                            ArtworkUrl = "https://s3.us-central-1.wasabisys.com/dustypig/media/Movies/Big%20Buck%20Bunny%20%282008%29.jpg",
                            BackdropUrl = "https://s3.us-central-1.wasabisys.com/dustypig/media/Movies/Big%20Buck%20Bunny%20%282008%29.backdrop.jpg",
                            BifUrl = "https://s3.us-central-1.wasabisys.com/dustypig/media/Movies/Big%20Buck%20Bunny%20%282008%29.bif",
                            CreditsStartTime = 490.25,
                            Date = new DateTime(2008, 4, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Follow a day of the life of Big Buck Bunny when he meets three bullying rodents: Frank, Rinky, and Gamera. The rodents amuse themselves by harassing helpless creatures by throwing fruits, nuts and rocks at them. After the deaths of two of Bunny's favorite butterflies, and an offensive attack on Bunny himself, Bunny sets aside his gentle nature and orchestrates a complex plan for revenge.",
                            EntryType = 1,
                            Genres = 1092L,
                            Hash = "9646997A1E9CDA5FC57353A2F7A6CEE4B58BBCADDBE9D921E09F75396C1F07682CACE518417BB111644EE79D2C0ECBAFB52F21BB652D7FF2B8A231ADB40C8015",
                            Length = 596.47400000000005,
                            LibraryId = 1,
                            Rated = 1,
                            SortTitle = "big buck bunny",
                            TMDB_Id = 10378,
                            Title = "Big Buck Bunny",
                            VideoUrl = "https://s3.us-central-1.wasabisys.com/dustypig/media/Movies/Big%20Buck%20Bunny%20%282008%29.mp4"
                        },
                        new
                        {
                            Id = 3,
                            Added = new DateTime(2021, 9, 6, 5, 20, 38, 506, DateTimeKind.Unspecified).AddTicks(3620),
                            ArtworkUrl = "https://s3.us-central-1.wasabisys.com/dustypig/media/Movies/Coffee%20Run%20%282020%29.jpg",
                            BackdropUrl = "https://s3.us-central-1.wasabisys.com/dustypig/media/Movies/Coffee%20Run%20%282020%29.backdrop.jpg",
                            BifUrl = "https://s3.us-central-1.wasabisys.com/dustypig/media/Movies/Coffee%20Run%20%282020%29.bif",
                            CreditsStartTime = 164.083,
                            Date = new DateTime(2020, 5, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Fueled by caffeine, a young woman runs through the bittersweet memories of her past relationship.",
                            EntryType = 1,
                            Genres = 1029L,
                            Hash = "6BEC6E139049C49C2FF1C531876D0D7F79D8FFAB42F8F29074388B50FE045A09003E4F87E677A842D6D35A6D3DF30B3274BF17E40A613A5155804566BF2E4DFD",
                            IntroEndTime = 6.7919999999999998,
                            IntroStartTime = 0.0,
                            Length = 184.59899999999999,
                            LibraryId = 1,
                            Rated = 1,
                            SortTitle = "coffee run",
                            TMDB_Id = 717986,
                            Title = "Coffee Run",
                            VideoUrl = "https://s3.us-central-1.wasabisys.com/dustypig/media/Movies/Coffee%20Run%20%282020%29.mp4"
                        },
                        new
                        {
                            Id = 4,
                            Added = new DateTime(2021, 9, 6, 5, 20, 38, 554, DateTimeKind.Unspecified).AddTicks(5793),
                            ArtworkUrl = "https://s3.us-central-1.wasabisys.com/dustypig/media/Movies/Hero%20%282018%29.jpg",
                            BackdropUrl = "https://s3.us-central-1.wasabisys.com/dustypig/media/Movies/Hero%20%282018%29.backdrop.jpg",
                            BifUrl = "https://s3.us-central-1.wasabisys.com/dustypig/media/Movies/Hero%20%282018%29.bif",
                            CreditsStartTime = 147.31399999999999,
                            Date = new DateTime(2018, 4, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Hero is a showcase for the updated Grease Pencil tools in Blender 2.80. Grease Pencil means 2D animation tools within a full 3D pipeline.",
                            EntryType = 1,
                            Genres = 1030L,
                            Hash = "B79323E58B71C58E7A256FE320B5791941DE97A3F748EF1AEBA6DA8D7D38E875557D3553F0D1AEAD359F5AA8DDE4DED456484F9F7D5483D05836B17F81C54581",
                            IntroEndTime = 4.8380000000000001,
                            IntroStartTime = 0.0,
                            Length = 236.65799999999999,
                            LibraryId = 1,
                            Rated = 1,
                            SortTitle = "hero",
                            TMDB_Id = 615324,
                            Title = "Hero",
                            VideoUrl = "https://s3.us-central-1.wasabisys.com/dustypig/media/Movies/Hero%20%282018%29.mp4"
                        },
                        new
                        {
                            Id = 5,
                            Added = new DateTime(2021, 9, 6, 5, 20, 38, 601, DateTimeKind.Unspecified).AddTicks(9560),
                            ArtworkUrl = "https://s3.us-central-1.wasabisys.com/dustypig/media/Movies/Spring%20%282019%29.jpg",
                            BackdropUrl = "https://s3.us-central-1.wasabisys.com/dustypig/media/Movies/Spring%20%282019%29.backdrop.jpg",
                            BifUrl = "https://s3.us-central-1.wasabisys.com/dustypig/media/Movies/Spring%20%282019%29.bif",
                            CreditsStartTime = 427.79199999999997,
                            Date = new DateTime(2019, 4, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "The story of a shepherd girl and her dog who face ancient spirits in order to continue the cycle of life.",
                            EntryType = 1,
                            Genres = 3076L,
                            Hash = "027B24E5D65C5FA431D54AD24F16DD801851CE3F95615CDD3951A5141D79AFD7B01688C0B2E83060948888B339160411DD1E116FFB018E440943BFD99B022291",
                            Length = 464.09800000000001,
                            LibraryId = 1,
                            Rated = 1,
                            SortTitle = "spring",
                            TMDB_Id = 593048,
                            Title = "Spring",
                            VideoUrl = "https://s3.us-central-1.wasabisys.com/dustypig/media/Movies/Spring%20%282019%29.mp4"
                        },
                        new
                        {
                            Id = 6,
                            ArtworkUrl = "https://s3.us-central-1.wasabisys.com/dustypig/media/TV%20Shows/Caminandes/show.jpg",
                            BackdropUrl = "https://s3.us-central-1.wasabisys.com/dustypig/media/TV%20Shows/Caminandes/backdrop.jpg",
                            Description = "The Caminandes cartoon series follows our hero Koro the Llama as he explores Patagonia, attempts to overcome various obstacles, and becomes friends with Oti the pesky penguin.",
                            EntryType = 2,
                            Genres = 1060L,
                            Hash = "E47A2E93157FE103F49F71DE1D04CA6E31F47F6DFFADAA2CDA654B71C61BB0E4038235F5C97C09323590BB084EF5BD30C58B555689FE835668A2DC68232C548F",
                            LibraryId = 2,
                            Rated = 256,
                            SortTitle = "caminandes",
                            TMDB_Id = 276116,
                            Title = "Caminandes"
                        },
                        new
                        {
                            Id = 7,
                            Added = new DateTime(2021, 9, 6, 5, 20, 39, 559, DateTimeKind.Unspecified).AddTicks(3737),
                            ArtworkUrl = "https://s3.us-central-1.wasabisys.com/dustypig/media/TV%20Shows/Caminandes/Season%2001/Caminandes%20-%20s01e03%20-%20Llamigos.jpg",
                            BifUrl = "https://s3.us-central-1.wasabisys.com/dustypig/media/TV%20Shows/Caminandes/Season%2001/Caminandes%20-%20s01e03%20-%20Llamigos.bif",
                            CreditsStartTime = 139.5,
                            Date = new DateTime(2013, 12, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Koro meets Oti, a pesky Magellanic penguin, in an epic battle over tasty red berries during the winter.",
                            EntryType = 3,
                            Episode = 3,
                            Hash = "41B2658FEE67627A1F641E585A1AABAE1267C2E2331FD4101A8EE2743A9E9B67A0EC7F20DE6A3CD9E22BD8BFAD3CA3CF2BA27F2236DE25C2413611D2A930DA6A",
                            Length = 150.048,
                            LibraryId = 2,
                            LinkedToId = 6,
                            Season = 1,
                            TMDB_Id = 0,
                            Title = "Llamigos",
                            VideoUrl = "https://s3.us-central-1.wasabisys.com/dustypig/media/TV%20Shows/Caminandes/Season%2001/Caminandes%20-%20s01e03%20-%20Llamigos.mp4",
                            Xid = 10003L
                        },
                        new
                        {
                            Id = 8,
                            Added = new DateTime(2021, 9, 6, 5, 20, 38, 559, DateTimeKind.Unspecified).AddTicks(3102),
                            ArtworkUrl = "https://s3.us-central-1.wasabisys.com/dustypig/media/TV%20Shows/Caminandes/Season%2001/Caminandes%20-%20s01e02%20-%20Gran%20Dillama.jpg",
                            BifUrl = "https://s3.us-central-1.wasabisys.com/dustypig/media/TV%20Shows/Caminandes/Season%2001/Caminandes%20-%20s01e02%20-%20Gran%20Dillama.bif",
                            CreditsStartTime = 119.25,
                            Date = new DateTime(2013, 11, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Koro hunts for food on the other side of a fence and is once again inspired by the Armadillo but this time to a shocking effect.",
                            EntryType = 3,
                            Episode = 2,
                            Hash = "94A2E1F9E973552DB73220BED6842AD4EED820B3F530A387177EAC70189A4F50A2B6D4A0E705DC728F613E43BF2C87E19E6B44ABE003A12B1F1384A68DFB8614",
                            Length = 146.00800000000001,
                            LibraryId = 2,
                            LinkedToId = 6,
                            Season = 1,
                            TMDB_Id = 0,
                            Title = "Gran Dillama",
                            VideoUrl = "https://s3.us-central-1.wasabisys.com/dustypig/media/TV%20Shows/Caminandes/Season%2001/Caminandes%20-%20s01e02%20-%20Gran%20Dillama.mp4",
                            Xid = 10002L
                        },
                        new
                        {
                            Id = 9,
                            Added = new DateTime(2021, 9, 6, 5, 20, 37, 559, DateTimeKind.Unspecified).AddTicks(1031),
                            ArtworkUrl = "https://s3.us-central-1.wasabisys.com/dustypig/media/TV%20Shows/Caminandes/Season%2001/Caminandes%20-%20s01e01%20-%20Llama%20Drama.jpg",
                            BifUrl = "https://s3.us-central-1.wasabisys.com/dustypig/media/TV%20Shows/Caminandes/Season%2001/Caminandes%20-%20s01e01%20-%20Llama%20Drama.bif",
                            CreditsStartTime = 87.917000000000002,
                            Date = new DateTime(2013, 9, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Koro has trouble crossing an apparent desolate road, a problem that an unwitting Armadillo does not share.",
                            EntryType = 3,
                            Episode = 1,
                            Hash = "32B523CD69F065EB37CDE5C1BD8A18E6C1367A27608F450A3479A6AF5F98D0391A3D9ACB869614815F6D0A01954F89412390DC60A85161FC65398C3D91960DD8",
                            Length = 90.001000000000005,
                            LibraryId = 2,
                            LinkedToId = 6,
                            Season = 1,
                            TMDB_Id = 0,
                            Title = "Llama Drama",
                            VideoUrl = "https://s3.us-central-1.wasabisys.com/dustypig/media/TV%20Shows/Caminandes/Season%2001/Caminandes%20-%20s01e01%20-%20Llama%20Drama.mp4",
                            Xid = 10001L
                        });
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.MediaPersonBridge", b =>
                {
                    b.Property<int>("MediaEntryId")
                        .HasColumnType("int");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("MediaEntryId", "PersonId", "Role");

                    b.HasIndex("PersonId");

                    b.ToTable("MediaPersonBridges");
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.MediaSearchBridge", b =>
                {
                    b.Property<int>("MediaEntryId")
                        .HasColumnType("int");

                    b.Property<int>("SearchTermId")
                        .HasColumnType("int");

                    b.HasKey("MediaEntryId", "SearchTermId");

                    b.HasIndex("SearchTermId");

                    b.ToTable("MediaSearchBridges");

                    b.HasData(
                        new
                        {
                            MediaEntryId = 1,
                            SearchTermId = 1
                        },
                        new
                        {
                            MediaEntryId = 1,
                            SearchTermId = 2
                        },
                        new
                        {
                            MediaEntryId = 1,
                            SearchTermId = 3
                        },
                        new
                        {
                            MediaEntryId = 1,
                            SearchTermId = 4
                        },
                        new
                        {
                            MediaEntryId = 1,
                            SearchTermId = 5
                        },
                        new
                        {
                            MediaEntryId = 1,
                            SearchTermId = 6
                        },
                        new
                        {
                            MediaEntryId = 1,
                            SearchTermId = 7
                        },
                        new
                        {
                            MediaEntryId = 1,
                            SearchTermId = 8
                        },
                        new
                        {
                            MediaEntryId = 2,
                            SearchTermId = 9
                        },
                        new
                        {
                            MediaEntryId = 2,
                            SearchTermId = 10
                        },
                        new
                        {
                            MediaEntryId = 2,
                            SearchTermId = 11
                        },
                        new
                        {
                            MediaEntryId = 3,
                            SearchTermId = 12
                        },
                        new
                        {
                            MediaEntryId = 3,
                            SearchTermId = 13
                        },
                        new
                        {
                            MediaEntryId = 4,
                            SearchTermId = 14
                        },
                        new
                        {
                            MediaEntryId = 5,
                            SearchTermId = 15
                        },
                        new
                        {
                            MediaEntryId = 6,
                            SearchTermId = 16
                        });
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("FriendshipId")
                        .HasColumnType("int");

                    b.Property<int?>("GetRequestId")
                        .HasColumnType("int");

                    b.Property<int?>("MediaEntryId")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<int>("NotificationType")
                        .HasColumnType("int");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int");

                    b.Property<bool>("Seen")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Sent")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Title")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<int?>("TitleOverrideId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FriendshipId");

                    b.HasIndex("GetRequestId");

                    b.HasIndex("MediaEntryId");

                    b.HasIndex("ProfileId");

                    b.HasIndex("TitleOverrideId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Hash")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("Hash")
                        .IsUnique();

                    b.ToTable("People");
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.Playlist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CurrentIndex")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProfileId", "Name", "CurrentIndex")
                        .IsUnique();

                    b.ToTable("Playlists");
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.PlaylistItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Index")
                        .HasColumnType("int");

                    b.Property<int>("MediaEntryId")
                        .HasColumnType("int");

                    b.Property<int>("PlaylistId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MediaEntryId");

                    b.HasIndex("PlaylistId");

                    b.ToTable("PlaylistItems");
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.Profile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<int>("AllowedRatings")
                        .HasColumnType("int");

                    b.Property<string>("AvatarUrl")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<bool>("IsMain")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Locked")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("NotificationMethods")
                        .HasColumnType("int");

                    b.Property<short?>("PinNumber")
                        .HasColumnType("smallint");

                    b.Property<byte>("TitleRequestPermission")
                        .HasColumnType("tinyint unsigned");

                    b.Property<bool>("WeeklySummary")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("AccountId", "Name")
                        .IsUnique();

                    b.ToTable("Profiles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccountId = 1,
                            AllowedRatings = 8191,
                            AvatarUrl = "https://s3.us-central-1.wasabisys.com/dustypig/media/profile_grey.png",
                            IsMain = true,
                            Locked = false,
                            Name = "Test User",
                            NotificationMethods = 0,
                            TitleRequestPermission = (byte)1,
                            WeeklySummary = false
                        });
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.ProfileLibraryShare", b =>
                {
                    b.Property<int>("ProfileId")
                        .HasColumnType("int");

                    b.Property<int>("LibraryId")
                        .HasColumnType("int");

                    b.HasKey("ProfileId", "LibraryId");

                    b.HasIndex("LibraryId");

                    b.ToTable("ProfileLibraryShares");

                    b.HasData(
                        new
                        {
                            ProfileId = 1,
                            LibraryId = 1
                        },
                        new
                        {
                            ProfileId = 1,
                            LibraryId = 2
                        });
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.ProfileMediaProgress", b =>
                {
                    b.Property<int>("ProfileId")
                        .HasColumnType("int");

                    b.Property<int>("MediaEntryId")
                        .HasColumnType("int");

                    b.Property<double>("Played")
                        .HasColumnType("double");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("Xid")
                        .HasColumnType("bigint");

                    b.HasKey("ProfileId", "MediaEntryId");

                    b.HasIndex("MediaEntryId");

                    b.ToTable("ProfileMediaProgresses");

                    b.HasData(
                        new
                        {
                            ProfileId = 1,
                            MediaEntryId = 2,
                            Played = 180.0,
                            Timestamp = new DateTime(2021, 9, 24, 11, 34, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ProfileId = 1,
                            MediaEntryId = 1,
                            Played = 10.0,
                            Timestamp = new DateTime(2021, 9, 24, 11, 35, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ProfileId = 1,
                            MediaEntryId = 8,
                            Played = 30.0,
                            Timestamp = new DateTime(2021, 9, 24, 13, 12, 14, 344, DateTimeKind.Unspecified).AddTicks(8000)
                        });
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.SearchTerm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Hash")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("Term")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("Hash")
                        .IsUnique();

                    b.ToTable("SearchTerms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Hash = "EDBFAC241AA6B765DABD6FB200BC9E96898C4F3579C4EE2531197F61B2375457026416863E6837B68547DC72ECCF590380695908FD2266F69668A891355CB07B",
                            Term = "agent"
                        },
                        new
                        {
                            Id = 2,
                            Hash = "A2D37ACFEF44E343C8927DC8BB2E034AE595F8BA1CBC4826B83A162B7316AD444CAB756B01588D3EDA4FBEA384CF8D35105D4D49A4A67CCE8A37FCAD24FFE77A",
                            Term = "three"
                        },
                        new
                        {
                            Id = 3,
                            Hash = "9730E3966623741F4CD74CA2B30C283BA35A7B9A23081E7AA4D418411A65D5280C7FC62B49474AE0F584F08AE4ED81C043DC383E8D448F507A902040696DA694",
                            Term = "hundred"
                        },
                        new
                        {
                            Id = 4,
                            Hash = "F952314A7CB04DD066E8262BA212ECE3A8E8D389274526BCAB36B583E576CE10B2B1AEA520AE90B44CF966E50181DFD4344CD24B1E970E9155BC75FDA04F3F93",
                            Term = "and"
                        },
                        new
                        {
                            Id = 5,
                            Hash = "92843A344FC34C6B315DC47DB798D9E5927F2B560C2EEDB72E4532679486F08CBBF239E3EBD963147986A60E27ED9A4303130689D747DFF1F7F5B383C7889941",
                            Term = "twenty"
                        },
                        new
                        {
                            Id = 6,
                            Hash = "3A36ACD803CD9E0A6B76E6380C0F4644500EF32EE1DDCCA7BEC288D0CB02708E3215FB9B7BDA2A54306A6445DA30F221ABB931B3BB5EE18224FB535470F55060",
                            Term = "seven"
                        },
                        new
                        {
                            Id = 7,
                            Hash = "C7F49C357C2042E8F32D53E29F33896A4A10A3EDB8135C8E45A8FE0AE4AA59BE0A50485A1CF954EE033A522D2A136224D7F228EC654DF5ACE9D950222615C611",
                            Term = "operation"
                        },
                        new
                        {
                            Id = 8,
                            Hash = "87EFEC91CEACDC6002B1BD25C1C6F7EA030C7D862A1B7C12B8B0A9990E7A7C2B4ABF89D9ACE5E1DEC117C9110D97BE1C8FAAEB314CC2683E496463E79AECA4A4",
                            Term = "barbershop"
                        },
                        new
                        {
                            Id = 9,
                            Hash = "E5174FE396755C5A9C2298344B758BF0429CDADBB5CEA9D3657F6AF8F0FF81C5EBD18114D2ACFA551E97A8AF64230CEB56E697E52CA4F122D275D17887CCD234",
                            Term = "big"
                        },
                        new
                        {
                            Id = 10,
                            Hash = "605D795D46EDE50E397CF9738BC178E160045F24173F7F6B379BBD710F452A442A061A5FEDED1F3C7350563853F2D7F412E2C64A47B4B77956C0C8CF45726B2B",
                            Term = "buck"
                        },
                        new
                        {
                            Id = 11,
                            Hash = "0B183278B9EC4FBBF9FD7A6CF71191F3C2F9AA2900B272D5FB6D5115DFC9F8E37B73A38C8790C16C88A10EFF89F3D4747971B39B1D9EC295957F365F34A4BAED",
                            Term = "bunny"
                        },
                        new
                        {
                            Id = 12,
                            Hash = "08E87AC6C87C9E72BA27A00787AF7F41B1E6CF713FF19B82E3BFAF5C2033AE0E9D33360285BFC286923C79678F4AB1961F4A615A547024C1203B39E4CF256627",
                            Term = "coffee"
                        },
                        new
                        {
                            Id = 13,
                            Hash = "7DE0F9ED5EE7D87C8BA957EAB554BF7FF434F8D7BB3248A86D7970062CE34989D4413303DE0CC1835FEC01A9D8C2C77C5AB1B742F3E6F973C3A783FBB4444FDB",
                            Term = "run"
                        },
                        new
                        {
                            Id = 14,
                            Hash = "3AAE2745CC1985EF3AB324F9A49A91A97B48878F24F7FB1C9B19B79E4C47CBE5F6C0A0F5FA636A918EE788582EC4ABC942863880803AEC5E663CDD509B646124",
                            Term = "hero"
                        },
                        new
                        {
                            Id = 15,
                            Hash = "D791311ECD55380BC434619AA3F876C77596A7BFBC4A8C00E39E38D05C5AFE115932877C8758D7284BBB0EDFED0E28AB8318B0D68259EA8BD870C5E1B0BEC4E7",
                            Term = "spring"
                        },
                        new
                        {
                            Id = 16,
                            Hash = "E47A2E93157FE103F49F71DE1D04CA6E31F47F6DFFADAA2CDA654B71C61BB0E4038235F5C97C09323590BB084EF5BD30C58B555689FE835668A2DC68232C548F",
                            Term = "caminandes"
                        });
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.Subscription", b =>
                {
                    b.Property<int>("ProfileId")
                        .HasColumnType("int");

                    b.Property<int>("MediaEntryId")
                        .HasColumnType("int");

                    b.HasKey("ProfileId", "MediaEntryId");

                    b.HasIndex("MediaEntryId");

                    b.ToTable("Subscriptions");
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.Subtitle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("MediaEntryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.HasKey("Id");

                    b.HasIndex("MediaEntryId", "Name")
                        .IsUnique();

                    b.ToTable("Subtitles");
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.TitleOverride", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("MediaEntryId")
                        .HasColumnType("int");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MediaEntryId");

                    b.HasIndex("ProfileId", "MediaEntryId")
                        .IsUnique();

                    b.ToTable("TitleOverrides");
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.WatchlistItem", b =>
                {
                    b.Property<int>("ProfileId")
                        .HasColumnType("int");

                    b.Property<int>("MediaEntryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Added")
                        .HasColumnType("datetime(6)");

                    b.HasKey("ProfileId", "MediaEntryId");

                    b.HasIndex("MediaEntryId");

                    b.ToTable("WatchListItems");
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.AccountToken", b =>
                {
                    b.HasOne("DustyPig.Server.Data.Models.Account", "Account")
                        .WithMany("AccountTokens")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.ActivationCode", b =>
                {
                    b.HasOne("DustyPig.Server.Data.Models.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Account");
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.DeviceToken", b =>
                {
                    b.HasOne("DustyPig.Server.Data.Models.Profile", "Profile")
                        .WithMany("DeviceTokens")
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.FriendLibraryShare", b =>
                {
                    b.HasOne("DustyPig.Server.Data.Models.Friendship", "Friendship")
                        .WithMany("FriendLibraryShares")
                        .HasForeignKey("FriendshipId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DustyPig.Server.Data.Models.Library", "Library")
                        .WithMany("FriendLibraryShares")
                        .HasForeignKey("LibraryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Friendship");

                    b.Navigation("Library");
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.Friendship", b =>
                {
                    b.HasOne("DustyPig.Server.Data.Models.Account", "Account1")
                        .WithMany()
                        .HasForeignKey("Account1Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DustyPig.Server.Data.Models.Account", "Account2")
                        .WithMany()
                        .HasForeignKey("Account2Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account1");

                    b.Navigation("Account2");
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.GetRequest", b =>
                {
                    b.HasOne("DustyPig.Server.Data.Models.Account", "Account")
                        .WithMany("GetRequests")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DustyPig.Server.Data.Models.Profile", null)
                        .WithMany("GetRequests")
                        .HasForeignKey("ProfileId");

                    b.Navigation("Account");
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.GetRequestSubscription", b =>
                {
                    b.HasOne("DustyPig.Server.Data.Models.GetRequest", "GetRequest")
                        .WithMany("NotificationSubscriptions")
                        .HasForeignKey("GetRequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DustyPig.Server.Data.Models.Profile", "Profile")
                        .WithMany()
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GetRequest");

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.Library", b =>
                {
                    b.HasOne("DustyPig.Server.Data.Models.Account", "Account")
                        .WithMany("Libraries")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.MediaEntry", b =>
                {
                    b.HasOne("DustyPig.Server.Data.Models.Library", "Library")
                        .WithMany("MediaEntries")
                        .HasForeignKey("LibraryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DustyPig.Server.Data.Models.MediaEntry", "LinkedTo")
                        .WithMany()
                        .HasForeignKey("LinkedToId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Library");

                    b.Navigation("LinkedTo");
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.MediaPersonBridge", b =>
                {
                    b.HasOne("DustyPig.Server.Data.Models.MediaEntry", "MediaEntry")
                        .WithMany("People")
                        .HasForeignKey("MediaEntryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DustyPig.Server.Data.Models.Person", "Person")
                        .WithOne("MediaBridges")
                        .HasForeignKey("DustyPig.Server.Data.Models.MediaPersonBridge", "PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MediaEntry");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.MediaSearchBridge", b =>
                {
                    b.HasOne("DustyPig.Server.Data.Models.MediaEntry", "MediaEntry")
                        .WithMany("MediaSearchBridges")
                        .HasForeignKey("MediaEntryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DustyPig.Server.Data.Models.SearchTerm", "SearchTerm")
                        .WithMany("SearchTermBridges")
                        .HasForeignKey("SearchTermId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MediaEntry");

                    b.Navigation("SearchTerm");
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.Notification", b =>
                {
                    b.HasOne("DustyPig.Server.Data.Models.Friendship", "Friendship")
                        .WithMany()
                        .HasForeignKey("FriendshipId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DustyPig.Server.Data.Models.GetRequest", "GetRequest")
                        .WithMany()
                        .HasForeignKey("GetRequestId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DustyPig.Server.Data.Models.MediaEntry", "MediaEntry")
                        .WithMany()
                        .HasForeignKey("MediaEntryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DustyPig.Server.Data.Models.Profile", "Profile")
                        .WithMany("Notifications")
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DustyPig.Server.Data.Models.TitleOverride", "TitleOverride")
                        .WithMany()
                        .HasForeignKey("TitleOverrideId");

                    b.Navigation("Friendship");

                    b.Navigation("GetRequest");

                    b.Navigation("MediaEntry");

                    b.Navigation("Profile");

                    b.Navigation("TitleOverride");
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.Playlist", b =>
                {
                    b.HasOne("DustyPig.Server.Data.Models.Profile", "Profile")
                        .WithMany("Playlists")
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.PlaylistItem", b =>
                {
                    b.HasOne("DustyPig.Server.Data.Models.MediaEntry", "MediaEntry")
                        .WithMany("PlaylistItems")
                        .HasForeignKey("MediaEntryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DustyPig.Server.Data.Models.Playlist", "Playlist")
                        .WithMany("PlaylistItems")
                        .HasForeignKey("PlaylistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MediaEntry");

                    b.Navigation("Playlist");
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.Profile", b =>
                {
                    b.HasOne("DustyPig.Server.Data.Models.Account", "Account")
                        .WithMany("Profiles")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.ProfileLibraryShare", b =>
                {
                    b.HasOne("DustyPig.Server.Data.Models.Library", "Library")
                        .WithMany("ProfileLibraryShares")
                        .HasForeignKey("LibraryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DustyPig.Server.Data.Models.Profile", "Profile")
                        .WithMany("ProfileLibraryShares")
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Library");

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.ProfileMediaProgress", b =>
                {
                    b.HasOne("DustyPig.Server.Data.Models.MediaEntry", "MediaEntry")
                        .WithMany("ProfileMediaProgress")
                        .HasForeignKey("MediaEntryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DustyPig.Server.Data.Models.Profile", "Profile")
                        .WithMany("ProfileMediaProgress")
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MediaEntry");

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.Subscription", b =>
                {
                    b.HasOne("DustyPig.Server.Data.Models.MediaEntry", "MediaEntry")
                        .WithMany("Subscriptions")
                        .HasForeignKey("MediaEntryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DustyPig.Server.Data.Models.Profile", "Profile")
                        .WithMany("Subscriptions")
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MediaEntry");

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.Subtitle", b =>
                {
                    b.HasOne("DustyPig.Server.Data.Models.MediaEntry", "MediaEntry")
                        .WithMany("Subtitles")
                        .HasForeignKey("MediaEntryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MediaEntry");
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.TitleOverride", b =>
                {
                    b.HasOne("DustyPig.Server.Data.Models.MediaEntry", "MediaEntry")
                        .WithMany("TitleOverrides")
                        .HasForeignKey("MediaEntryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DustyPig.Server.Data.Models.Profile", "Profile")
                        .WithMany("TitleOverrides")
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MediaEntry");

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.WatchlistItem", b =>
                {
                    b.HasOne("DustyPig.Server.Data.Models.MediaEntry", "MediaEntry")
                        .WithMany("WatchlistItems")
                        .HasForeignKey("MediaEntryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DustyPig.Server.Data.Models.Profile", "Profile")
                        .WithMany("WatchlistItems")
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MediaEntry");

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.Account", b =>
                {
                    b.Navigation("AccountTokens");

                    b.Navigation("GetRequests");

                    b.Navigation("Libraries");

                    b.Navigation("Profiles");
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.Friendship", b =>
                {
                    b.Navigation("FriendLibraryShares");
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.GetRequest", b =>
                {
                    b.Navigation("NotificationSubscriptions");
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.Library", b =>
                {
                    b.Navigation("FriendLibraryShares");

                    b.Navigation("MediaEntries");

                    b.Navigation("ProfileLibraryShares");
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.MediaEntry", b =>
                {
                    b.Navigation("MediaSearchBridges");

                    b.Navigation("People");

                    b.Navigation("PlaylistItems");

                    b.Navigation("ProfileMediaProgress");

                    b.Navigation("Subscriptions");

                    b.Navigation("Subtitles");

                    b.Navigation("TitleOverrides");

                    b.Navigation("WatchlistItems");
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.Person", b =>
                {
                    b.Navigation("MediaBridges");
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.Playlist", b =>
                {
                    b.Navigation("PlaylistItems");
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.Profile", b =>
                {
                    b.Navigation("DeviceTokens");

                    b.Navigation("GetRequests");

                    b.Navigation("Notifications");

                    b.Navigation("Playlists");

                    b.Navigation("ProfileLibraryShares");

                    b.Navigation("ProfileMediaProgress");

                    b.Navigation("Subscriptions");

                    b.Navigation("TitleOverrides");

                    b.Navigation("WatchlistItems");
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.SearchTerm", b =>
                {
                    b.Navigation("SearchTermBridges");
                });
#pragma warning restore 612, 618
        }
    }
}
