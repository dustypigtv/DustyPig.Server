// <auto-generated />
using System;
using DustyPig.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DustyPig.Server.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220423085557_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("DustyPig.Server.Data.Models.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("FirebaseId")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.HasKey("Id");

                    b.HasIndex("FirebaseId")
                        .IsUnique();

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirebaseId = "TEST ACCOUNT"
                        });
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.AccountToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("AccountTokens");
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.ActivationCode", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)");

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.HasKey("Code");

                    b.HasIndex("AccountId");

                    b.ToTable("ActivationCodes");
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.DeviceToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("LastSeen")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("varchar(1024)");

                    b.HasKey("Id");

                    b.HasIndex("ProfileId");

                    b.ToTable("DeviceTokens");
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.EncryptedServiceCredential", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<int>("CredentialType")
                        .HasColumnType("int");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("AccountId", "Name")
                        .IsUnique();

                    b.ToTable("EncryptedServiceCredentials");
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.FriendLibraryShare", b =>
                {
                    b.Property<int>("FriendshipId")
                        .HasColumnType("int");

                    b.Property<int>("LibraryId")
                        .HasColumnType("int");

                    b.Property<string>("LibraryDisplayName")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("FriendshipId", "LibraryId");

                    b.HasIndex("LibraryId");

                    b.ToTable("FriendLibraryShares");
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.Friendship", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Accepted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Account1Id")
                        .HasColumnType("int");

                    b.Property<int>("Account2Id")
                        .HasColumnType("int");

                    b.Property<string>("DisplayName1")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("DisplayName2")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Hash")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)");

                    b.Property<bool>("NotificationCreated")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("Account1Id");

                    b.HasIndex("Account2Id");

                    b.HasIndex("Hash")
                        .IsUnique();

                    b.ToTable("Friendships");
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.GetRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<int>("EntryType")
                        .HasColumnType("int");

                    b.Property<int>("ParentalStatus")
                        .HasColumnType("int");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TMDB_Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("ProfileId", "AccountId", "EntryType", "TMDB_Id");

                    b.ToTable("GetRequests");
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.Library", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<bool>("IsTV")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("AccountId", "Name")
                        .IsUnique();

                    b.ToTable("Libraries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccountId = 1,
                            IsTV = false,
                            Name = "Movies"
                        },
                        new
                        {
                            Id = 2,
                            AccountId = 1,
                            IsTV = true,
                            Name = "TV Shows"
                        });
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.LogEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CallSite")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Exception")
                        .HasColumnType("longtext");

                    b.Property<string>("Level")
                        .HasMaxLength(12)
                        .HasColumnType("varchar(12)");

                    b.Property<string>("Logger")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Message")
                        .HasMaxLength(4000)
                        .HasColumnType("varchar(4000)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.MediaEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("Added")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ArtworkUrl")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<int?>("BifServiceCredentialId")
                        .HasColumnType("int");

                    b.Property<string>("BifUrl")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<double?>("CreditsStartTime")
                        .HasColumnType("double");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasMaxLength(2500)
                        .HasColumnType("varchar(2500)");

                    b.Property<int>("EntryType")
                        .HasColumnType("int");

                    b.Property<int?>("Episode")
                        .HasColumnType("int");

                    b.Property<int?>("ExtraSortOrder")
                        .HasColumnType("int");

                    b.Property<long?>("Genres")
                        .HasColumnType("bigint");

                    b.Property<string>("Hash")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)");

                    b.Property<double?>("IntroEndTime")
                        .HasColumnType("double");

                    b.Property<double?>("IntroStartTime")
                        .HasColumnType("double");

                    b.Property<double?>("Length")
                        .HasColumnType("double");

                    b.Property<int>("LibraryId")
                        .HasColumnType("int");

                    b.Property<int?>("LinkedToId")
                        .HasColumnType("int");

                    b.Property<bool>("NotificationsCreated")
                        .HasColumnType("tinyint(1)");

                    b.Property<double?>("Popularity")
                        .HasColumnType("double");

                    b.Property<int?>("Rated")
                        .HasColumnType("int");

                    b.Property<int?>("Season")
                        .HasColumnType("int");

                    b.Property<string>("SortTitle")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("TMDB_Id")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("VideoServiceCredentialId")
                        .HasColumnType("int");

                    b.Property<string>("VideoUrl")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<long?>("Xid")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("BifServiceCredentialId");

                    b.HasIndex("LinkedToId");

                    b.HasIndex("VideoServiceCredentialId");

                    b.HasIndex("LibraryId", "EntryType", "TMDB_Id", "Hash")
                        .IsUnique();

                    b.ToTable("MediaEntries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Added = new DateTime(2021, 9, 6, 5, 20, 38, 399, DateTimeKind.Unspecified).AddTicks(9293),
                            ArtworkUrl = "https://s3.us-central-1.wasabisys.com/dustypig/media/Movies/Agent%20327_%20Operation%20Barbershop%20%282017%29.jpg",
                            BifUrl = "https://s3.us-central-1.wasabisys.com/dustypig/media/Movies/Agent%20327_%20Operation%20Barbershop%20%282017%29.bif",
                            CreditsStartTime = 205.875,
                            Date = new DateTime(2017, 5, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Agent 327 is investigating a clue that leads him to a shady barbershop in Amsterdam. Little does he know that he is being tailed by mercenary Boris Kloris.",
                            EntryType = 1,
                            Genres = 4195332L,
                            Hash = "4D517D0FE23F491E9898B2C4036633DD",
                            Length = 231.47999999999999,
                            LibraryId = 1,
                            NotificationsCreated = true,
                            Rated = 1,
                            SortTitle = "Agent 327: Operation Barbershop",
                            TMDB_Id = 457784,
                            Title = "Agent 327: Operation Barbershop",
                            VideoUrl = "https://s3.us-central-1.wasabisys.com/dustypig/media/Movies/Agent%20327_%20Operation%20Barbershop%20%282017%29.mp4"
                        },
                        new
                        {
                            Id = 2,
                            Added = new DateTime(2021, 9, 6, 5, 20, 38, 454, DateTimeKind.Unspecified).AddTicks(1594),
                            ArtworkUrl = "https://s3.us-central-1.wasabisys.com/dustypig/media/Movies/Big%20Buck%20Bunny%20%282008%29.jpg",
                            BifUrl = "https://s3.us-central-1.wasabisys.com/dustypig/media/Movies/Big%20Buck%20Bunny%20%282008%29.bif",
                            CreditsStartTime = 490.25,
                            Date = new DateTime(2008, 4, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Follow a day of the life of Big Buck Bunny when he meets three bullying rodents: Frank, Rinky, and Gamera. The rodents amuse themselves by harassing helpless creatures by throwing fruits, nuts and rocks at them. After the deaths of two of Bunny's favorite butterflies, and an offensive attack on Bunny himself, Bunny sets aside his gentle nature and orchestrates a complex plan for revenge.",
                            EntryType = 1,
                            Genres = 1092L,
                            Hash = "FD348F25B50C620489368C39114C546B",
                            Length = 596.47400000000005,
                            LibraryId = 1,
                            NotificationsCreated = true,
                            Rated = 1,
                            SortTitle = "Big Buck Bunny",
                            TMDB_Id = 10378,
                            Title = "Big Buck Bunny",
                            VideoUrl = "https://s3.us-central-1.wasabisys.com/dustypig/media/Movies/Big%20Buck%20Bunny%20%282008%29.mp4"
                        },
                        new
                        {
                            Id = 3,
                            Added = new DateTime(2021, 9, 6, 5, 20, 38, 506, DateTimeKind.Unspecified).AddTicks(3620),
                            ArtworkUrl = "https://s3.us-central-1.wasabisys.com/dustypig/media/Movies/Coffee%20Run%20%282020%29.jpg",
                            BifUrl = "https://s3.us-central-1.wasabisys.com/dustypig/media/Movies/Coffee%20Run%20%282020%29.bif",
                            CreditsStartTime = 164.083,
                            Date = new DateTime(2020, 5, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Fueled by caffeine, a young woman runs through the bittersweet memories of her past relationship.",
                            EntryType = 1,
                            Genres = 1029L,
                            Hash = "36E38939B821448B673B7282430414A4",
                            IntroEndTime = 6.7919999999999998,
                            IntroStartTime = 0.0,
                            Length = 184.59899999999999,
                            LibraryId = 1,
                            NotificationsCreated = true,
                            Rated = 1,
                            SortTitle = "Coffee Run",
                            TMDB_Id = 717986,
                            Title = "Coffee Run",
                            VideoUrl = "https://s3.us-central-1.wasabisys.com/dustypig/media/Movies/Coffee%20Run%20%282020%29.mp4"
                        },
                        new
                        {
                            Id = 4,
                            Added = new DateTime(2021, 9, 6, 5, 20, 38, 554, DateTimeKind.Unspecified).AddTicks(5793),
                            ArtworkUrl = "https://s3.us-central-1.wasabisys.com/dustypig/media/Movies/Hero%20%282018%29.jpg",
                            BifUrl = "https://s3.us-central-1.wasabisys.com/dustypig/media/Movies/Hero%20%282018%29.bif",
                            CreditsStartTime = 147.31399999999999,
                            Date = new DateTime(2018, 4, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Hero is a showcase for the updated Grease Pencil tools in Blender 2.80. Grease Pencil means 2D animation tools within a full 3D pipeline.",
                            EntryType = 1,
                            Genres = 1030L,
                            Hash = "D9034F1547910D922076D71505EF9630",
                            IntroEndTime = 4.8380000000000001,
                            IntroStartTime = 0.0,
                            Length = 236.65799999999999,
                            LibraryId = 1,
                            NotificationsCreated = true,
                            Rated = 1,
                            SortTitle = "Hero",
                            TMDB_Id = 615324,
                            Title = "Hero",
                            VideoUrl = "https://s3.us-central-1.wasabisys.com/dustypig/media/Movies/Hero%20%282018%29.mp4"
                        },
                        new
                        {
                            Id = 5,
                            Added = new DateTime(2021, 9, 6, 5, 20, 38, 601, DateTimeKind.Unspecified).AddTicks(9560),
                            ArtworkUrl = "https://s3.us-central-1.wasabisys.com/dustypig/media/Movies/Spring%20%282019%29.jpg",
                            BifUrl = "https://s3.us-central-1.wasabisys.com/dustypig/media/Movies/Spring%20%282019%29.bif",
                            CreditsStartTime = 427.79199999999997,
                            Date = new DateTime(2019, 4, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "The story of a shepherd girl and her dog who face ancient spirits in order to continue the cycle of life.",
                            EntryType = 1,
                            Genres = 3076L,
                            Hash = "1C318602D6D38D28DC00041FB05601C1",
                            Length = 464.09800000000001,
                            LibraryId = 1,
                            NotificationsCreated = true,
                            Rated = 1,
                            SortTitle = "Spring",
                            TMDB_Id = 593048,
                            Title = "Spring",
                            VideoUrl = "https://s3.us-central-1.wasabisys.com/dustypig/media/Movies/Spring%20%282019%29.mp4"
                        },
                        new
                        {
                            Id = 6,
                            ArtworkUrl = "https://s3.us-central-1.wasabisys.com/dustypig/media/TV%20Shows/Caminandes/show.jpg",
                            Description = "The Caminandes cartoon series follows our hero Koro the Llama as he explores Patagonia, attempts to overcome various obstacles, and becomes friends with Oti the pesky penguin.",
                            EntryType = 2,
                            Genres = 1060L,
                            Hash = "DCC9FD6C0133457A194DAAA1E54B0713",
                            LibraryId = 2,
                            NotificationsCreated = true,
                            Rated = 256,
                            SortTitle = "Caminandes",
                            TMDB_Id = 276116,
                            Title = "Caminandes"
                        },
                        new
                        {
                            Id = 7,
                            Added = new DateTime(2021, 9, 6, 5, 20, 39, 559, DateTimeKind.Unspecified).AddTicks(3737),
                            ArtworkUrl = "https://s3.us-central-1.wasabisys.com/dustypig/media/TV%20Shows/Caminandes/Season%2001/Caminandes%20-%20s01e03%20-%20Llamigos.jpg",
                            BifUrl = "https://s3.us-central-1.wasabisys.com/dustypig/media/TV%20Shows/Caminandes/Season%2001/Caminandes%20-%20s01e03%20-%20Llamigos.bif",
                            CreditsStartTime = 139.5,
                            Date = new DateTime(2013, 12, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Koro meets Oti, a pesky Magellanic penguin, in an epic battle over tasty red berries during the winter.",
                            EntryType = 3,
                            Episode = 3,
                            Hash = "1EBABA3465F39106375BE623A0EBAB45",
                            Length = 150.048,
                            LibraryId = 2,
                            LinkedToId = 6,
                            NotificationsCreated = true,
                            Season = 1,
                            TMDB_Id = 0,
                            Title = "Llamigos",
                            VideoUrl = "https://s3.us-central-1.wasabisys.com/dustypig/media/TV%20Shows/Caminandes/Season%2001/Caminandes%20-%20s01e03%20-%20Llamigos.mp4",
                            Xid = 10003L
                        },
                        new
                        {
                            Id = 8,
                            Added = new DateTime(2021, 9, 6, 5, 20, 38, 559, DateTimeKind.Unspecified).AddTicks(3102),
                            ArtworkUrl = "https://s3.us-central-1.wasabisys.com/dustypig/media/TV%20Shows/Caminandes/Season%2001/Caminandes%20-%20s01e02%20-%20Gran%20Dillama.jpg",
                            BifUrl = "https://s3.us-central-1.wasabisys.com/dustypig/media/TV%20Shows/Caminandes/Season%2001/Caminandes%20-%20s01e02%20-%20Gran%20Dillama.bif",
                            CreditsStartTime = 119.25,
                            Date = new DateTime(2013, 11, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Koro hunts for food on the other side of a fence and is once again inspired by the Armadillo but this time to a shocking effect.",
                            EntryType = 3,
                            Episode = 2,
                            Hash = "13BEA3CDE590997C1094F9BBA14D719A",
                            Length = 146.00800000000001,
                            LibraryId = 2,
                            LinkedToId = 6,
                            NotificationsCreated = true,
                            Season = 1,
                            TMDB_Id = 0,
                            Title = "Gran Dillama",
                            VideoUrl = "https://s3.us-central-1.wasabisys.com/dustypig/media/TV%20Shows/Caminandes/Season%2001/Caminandes%20-%20s01e02%20-%20Gran%20Dillama.mp4",
                            Xid = 10002L
                        },
                        new
                        {
                            Id = 9,
                            Added = new DateTime(2021, 9, 6, 5, 20, 37, 559, DateTimeKind.Unspecified).AddTicks(1031),
                            ArtworkUrl = "https://s3.us-central-1.wasabisys.com/dustypig/media/TV%20Shows/Caminandes/Season%2001/Caminandes%20-%20s01e01%20-%20Llama%20Drama.jpg",
                            BifUrl = "https://s3.us-central-1.wasabisys.com/dustypig/media/TV%20Shows/Caminandes/Season%2001/Caminandes%20-%20s01e01%20-%20Llama%20Drama.bif",
                            CreditsStartTime = 87.917000000000002,
                            Date = new DateTime(2013, 9, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Koro has trouble crossing an apparent desolate road, a problem that an unwitting Armadillo does not share.",
                            EntryType = 3,
                            Episode = 1,
                            Hash = "81582BDB254A94E4464424087C6479A8",
                            Length = 90.001000000000005,
                            LibraryId = 2,
                            LinkedToId = 6,
                            NotificationsCreated = true,
                            Season = 1,
                            TMDB_Id = 0,
                            Title = "Llama Drama",
                            VideoUrl = "https://s3.us-central-1.wasabisys.com/dustypig/media/TV%20Shows/Caminandes/Season%2001/Caminandes%20-%20s01e01%20-%20Llama%20Drama.mp4",
                            Xid = 10001L
                        });
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.MediaPersonBridge", b =>
                {
                    b.Property<int>("MediaEntryId")
                        .HasColumnType("int");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("MediaEntryId", "PersonId");

                    b.HasIndex("PersonId");

                    b.HasIndex("MediaEntryId", "PersonId", "Role");

                    b.ToTable("MediaPersonBridges");
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.MediaSearchBridge", b =>
                {
                    b.Property<int>("MediaEntryId")
                        .HasColumnType("int");

                    b.Property<int>("SearchTermId")
                        .HasColumnType("int");

                    b.HasKey("MediaEntryId", "SearchTermId");

                    b.HasIndex("SearchTermId");

                    b.ToTable("MediaSearchBridges");

                    b.HasData(
                        new
                        {
                            MediaEntryId = 1,
                            SearchTermId = 1
                        },
                        new
                        {
                            MediaEntryId = 1,
                            SearchTermId = 2
                        },
                        new
                        {
                            MediaEntryId = 1,
                            SearchTermId = 3
                        },
                        new
                        {
                            MediaEntryId = 1,
                            SearchTermId = 4
                        },
                        new
                        {
                            MediaEntryId = 2,
                            SearchTermId = 5
                        },
                        new
                        {
                            MediaEntryId = 2,
                            SearchTermId = 6
                        },
                        new
                        {
                            MediaEntryId = 2,
                            SearchTermId = 7
                        },
                        new
                        {
                            MediaEntryId = 3,
                            SearchTermId = 8
                        },
                        new
                        {
                            MediaEntryId = 3,
                            SearchTermId = 9
                        },
                        new
                        {
                            MediaEntryId = 4,
                            SearchTermId = 10
                        },
                        new
                        {
                            MediaEntryId = 5,
                            SearchTermId = 11
                        },
                        new
                        {
                            MediaEntryId = 6,
                            SearchTermId = 12
                        });
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("FriendshipId")
                        .HasColumnType("int");

                    b.Property<int?>("GetRequestId")
                        .HasColumnType("int");

                    b.Property<int?>("MediaEntryId")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<int>("NotificationType")
                        .HasColumnType("int");

                    b.Property<int?>("OverrideRequestId")
                        .HasColumnType("int");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int");

                    b.Property<bool>("Seen")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Sent")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Title")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.HasKey("Id");

                    b.HasIndex("FriendshipId");

                    b.HasIndex("GetRequestId");

                    b.HasIndex("MediaEntryId");

                    b.HasIndex("OverrideRequestId");

                    b.HasIndex("ProfileId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.OverrideRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("MediaEntryId")
                        .HasColumnType("int");

                    b.Property<bool>("NotificationCreated")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("MediaEntryId");

                    b.HasIndex("ProfileId");

                    b.ToTable("OverrideRequests");
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("People");
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.Playlist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ArtworkUrl")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<int>("CurrentIndex")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProfileId", "Name", "CurrentIndex")
                        .IsUnique();

                    b.ToTable("Playlists");
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.PlaylistItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Index")
                        .HasColumnType("int");

                    b.Property<int>("MediaEntryId")
                        .HasColumnType("int");

                    b.Property<int>("PlaylistId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MediaEntryId");

                    b.HasIndex("PlaylistId");

                    b.ToTable("PlaylistItems");
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.Profile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<int>("AllowedRatings")
                        .HasColumnType("int");

                    b.Property<string>("AvatarUrl")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<bool>("IsMain")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Locked")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("NotificationMethods")
                        .HasColumnType("int");

                    b.Property<short?>("PinNumber")
                        .HasColumnType("smallint");

                    b.Property<byte>("TitleRequestPermission")
                        .HasColumnType("tinyint unsigned");

                    b.Property<bool>("WeeklySummary")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("AccountId", "Name")
                        .IsUnique();

                    b.ToTable("Profiles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccountId = 1,
                            AllowedRatings = 8191,
                            AvatarUrl = "https://s3.us-central-1.wasabisys.com/dustypig/media/profile_grey.png",
                            IsMain = true,
                            Locked = false,
                            Name = "Test User",
                            NotificationMethods = 0,
                            TitleRequestPermission = (byte)1,
                            WeeklySummary = false
                        });
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.ProfileLibraryShare", b =>
                {
                    b.Property<int>("ProfileId")
                        .HasColumnType("int");

                    b.Property<int>("LibraryId")
                        .HasColumnType("int");

                    b.HasKey("ProfileId", "LibraryId");

                    b.HasIndex("LibraryId");

                    b.ToTable("ProfileLibraryShares");

                    b.HasData(
                        new
                        {
                            ProfileId = 1,
                            LibraryId = 1
                        },
                        new
                        {
                            ProfileId = 1,
                            LibraryId = 2
                        });
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.ProfileMediaProgress", b =>
                {
                    b.Property<int>("ProfileId")
                        .HasColumnType("int");

                    b.Property<int>("MediaEntryId")
                        .HasColumnType("int");

                    b.Property<double>("Played")
                        .HasColumnType("double");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime(6)");

                    b.HasKey("ProfileId", "MediaEntryId");

                    b.HasIndex("MediaEntryId");

                    b.ToTable("ProfileMediaProgresses");

                    b.HasData(
                        new
                        {
                            ProfileId = 1,
                            MediaEntryId = 2,
                            Played = 180.0,
                            Timestamp = new DateTime(2021, 9, 24, 11, 34, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ProfileId = 1,
                            MediaEntryId = 1,
                            Played = 10.0,
                            Timestamp = new DateTime(2021, 9, 24, 11, 35, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ProfileId = 1,
                            MediaEntryId = 8,
                            Played = 30.0,
                            Timestamp = new DateTime(2021, 9, 24, 13, 12, 14, 344, DateTimeKind.Unspecified).AddTicks(8000)
                        });
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.SearchTerm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Term")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Term")
                        .IsUnique();

                    b.ToTable("SearchTerms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Term = "agent"
                        },
                        new
                        {
                            Id = 2,
                            Term = "327"
                        },
                        new
                        {
                            Id = 3,
                            Term = "operation"
                        },
                        new
                        {
                            Id = 4,
                            Term = "barbershop"
                        },
                        new
                        {
                            Id = 5,
                            Term = "big"
                        },
                        new
                        {
                            Id = 6,
                            Term = "buck"
                        },
                        new
                        {
                            Id = 7,
                            Term = "bunny"
                        },
                        new
                        {
                            Id = 8,
                            Term = "coffee"
                        },
                        new
                        {
                            Id = 9,
                            Term = "run"
                        },
                        new
                        {
                            Id = 10,
                            Term = "hero"
                        },
                        new
                        {
                            Id = 11,
                            Term = "spring"
                        },
                        new
                        {
                            Id = 12,
                            Term = "caminandes"
                        });
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.Subscription", b =>
                {
                    b.Property<int>("ProfileId")
                        .HasColumnType("int");

                    b.Property<int>("MediaEntryId")
                        .HasColumnType("int");

                    b.HasKey("ProfileId", "MediaEntryId");

                    b.HasIndex("MediaEntryId");

                    b.ToTable("Subscriptions");
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.Subtitle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("MediaEntryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("ServiceCredentialId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.HasKey("Id");

                    b.HasIndex("ServiceCredentialId");

                    b.HasIndex("MediaEntryId", "Name")
                        .IsUnique();

                    b.ToTable("Subtitles");
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.TitleOverride", b =>
                {
                    b.Property<int>("ProfileId")
                        .HasColumnType("int");

                    b.Property<int>("MediaEntryId")
                        .HasColumnType("int");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.HasKey("ProfileId", "MediaEntryId");

                    b.HasIndex("MediaEntryId");

                    b.ToTable("TitleOverrides");
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.WatchlistItem", b =>
                {
                    b.Property<int>("ProfileId")
                        .HasColumnType("int");

                    b.Property<int>("MediaEntryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Added")
                        .HasColumnType("datetime(6)");

                    b.HasKey("ProfileId", "MediaEntryId");

                    b.HasIndex("MediaEntryId");

                    b.ToTable("WatchListItems");
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.AccountToken", b =>
                {
                    b.HasOne("DustyPig.Server.Data.Models.Account", "Account")
                        .WithMany("AccountTokens")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.ActivationCode", b =>
                {
                    b.HasOne("DustyPig.Server.Data.Models.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Account");
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.DeviceToken", b =>
                {
                    b.HasOne("DustyPig.Server.Data.Models.Profile", "Profile")
                        .WithMany("DeviceTokens")
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.EncryptedServiceCredential", b =>
                {
                    b.HasOne("DustyPig.Server.Data.Models.Account", "Account")
                        .WithMany("EncryptedServiceCredentials")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.FriendLibraryShare", b =>
                {
                    b.HasOne("DustyPig.Server.Data.Models.Friendship", "Friendship")
                        .WithMany("FriendLibraryShares")
                        .HasForeignKey("FriendshipId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DustyPig.Server.Data.Models.Library", "Library")
                        .WithMany("FriendLibraryShares")
                        .HasForeignKey("LibraryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Friendship");

                    b.Navigation("Library");
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.Friendship", b =>
                {
                    b.HasOne("DustyPig.Server.Data.Models.Account", "Account1")
                        .WithMany()
                        .HasForeignKey("Account1Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DustyPig.Server.Data.Models.Account", "Account2")
                        .WithMany()
                        .HasForeignKey("Account2Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account1");

                    b.Navigation("Account2");
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.GetRequest", b =>
                {
                    b.HasOne("DustyPig.Server.Data.Models.Account", "Account")
                        .WithMany("GetRequests")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DustyPig.Server.Data.Models.Profile", "Profile")
                        .WithMany("GetRequests")
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.Library", b =>
                {
                    b.HasOne("DustyPig.Server.Data.Models.Account", "Account")
                        .WithMany("Libraries")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.MediaEntry", b =>
                {
                    b.HasOne("DustyPig.Server.Data.Models.EncryptedServiceCredential", "BifServiceCredential")
                        .WithMany()
                        .HasForeignKey("BifServiceCredentialId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DustyPig.Server.Data.Models.Library", "Library")
                        .WithMany("MediaEntries")
                        .HasForeignKey("LibraryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DustyPig.Server.Data.Models.MediaEntry", "LinkedTo")
                        .WithMany()
                        .HasForeignKey("LinkedToId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DustyPig.Server.Data.Models.EncryptedServiceCredential", "VideoServiceCredential")
                        .WithMany()
                        .HasForeignKey("VideoServiceCredentialId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("BifServiceCredential");

                    b.Navigation("Library");

                    b.Navigation("LinkedTo");

                    b.Navigation("VideoServiceCredential");
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.MediaPersonBridge", b =>
                {
                    b.HasOne("DustyPig.Server.Data.Models.MediaEntry", "MediaEntry")
                        .WithMany("People")
                        .HasForeignKey("MediaEntryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DustyPig.Server.Data.Models.Person", "Person")
                        .WithOne("MediaBridges")
                        .HasForeignKey("DustyPig.Server.Data.Models.MediaPersonBridge", "PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MediaEntry");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.MediaSearchBridge", b =>
                {
                    b.HasOne("DustyPig.Server.Data.Models.MediaEntry", "MediaEntry")
                        .WithMany("MediaSearchBridges")
                        .HasForeignKey("MediaEntryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DustyPig.Server.Data.Models.SearchTerm", "SearchTerm")
                        .WithMany("SearchTermBridges")
                        .HasForeignKey("SearchTermId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MediaEntry");

                    b.Navigation("SearchTerm");
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.Notification", b =>
                {
                    b.HasOne("DustyPig.Server.Data.Models.Friendship", "Friendship")
                        .WithMany()
                        .HasForeignKey("FriendshipId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DustyPig.Server.Data.Models.GetRequest", "GetRequest")
                        .WithMany()
                        .HasForeignKey("GetRequestId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DustyPig.Server.Data.Models.MediaEntry", "MediaEntry")
                        .WithMany()
                        .HasForeignKey("MediaEntryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DustyPig.Server.Data.Models.OverrideRequest", "OverrideRequest")
                        .WithMany()
                        .HasForeignKey("OverrideRequestId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DustyPig.Server.Data.Models.Profile", "Profile")
                        .WithMany("Notifications")
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Friendship");

                    b.Navigation("GetRequest");

                    b.Navigation("MediaEntry");

                    b.Navigation("OverrideRequest");

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.OverrideRequest", b =>
                {
                    b.HasOne("DustyPig.Server.Data.Models.MediaEntry", "MediaEntry")
                        .WithMany("OverrideRequests")
                        .HasForeignKey("MediaEntryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DustyPig.Server.Data.Models.Profile", "Profile")
                        .WithMany("OverrideRequests")
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MediaEntry");

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.Playlist", b =>
                {
                    b.HasOne("DustyPig.Server.Data.Models.Profile", "Profile")
                        .WithMany("Playlists")
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.PlaylistItem", b =>
                {
                    b.HasOne("DustyPig.Server.Data.Models.MediaEntry", "MediaEntry")
                        .WithMany("PlaylistItems")
                        .HasForeignKey("MediaEntryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DustyPig.Server.Data.Models.Playlist", "Playlist")
                        .WithMany("PlaylistItems")
                        .HasForeignKey("PlaylistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MediaEntry");

                    b.Navigation("Playlist");
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.Profile", b =>
                {
                    b.HasOne("DustyPig.Server.Data.Models.Account", "Account")
                        .WithMany("Profiles")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.ProfileLibraryShare", b =>
                {
                    b.HasOne("DustyPig.Server.Data.Models.Library", "Library")
                        .WithMany("ProfileLibraryShares")
                        .HasForeignKey("LibraryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DustyPig.Server.Data.Models.Profile", "Profile")
                        .WithMany("ProfileLibraryShares")
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Library");

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.ProfileMediaProgress", b =>
                {
                    b.HasOne("DustyPig.Server.Data.Models.MediaEntry", "MediaEntry")
                        .WithMany("ProfileMediaProgress")
                        .HasForeignKey("MediaEntryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DustyPig.Server.Data.Models.Profile", "Profile")
                        .WithMany("ProfileMediaProgress")
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MediaEntry");

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.Subscription", b =>
                {
                    b.HasOne("DustyPig.Server.Data.Models.MediaEntry", "MediaEntry")
                        .WithMany("Subscriptions")
                        .HasForeignKey("MediaEntryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DustyPig.Server.Data.Models.Profile", "Profile")
                        .WithMany("Subscriptions")
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MediaEntry");

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.Subtitle", b =>
                {
                    b.HasOne("DustyPig.Server.Data.Models.MediaEntry", "MediaEntry")
                        .WithMany("Subtitles")
                        .HasForeignKey("MediaEntryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DustyPig.Server.Data.Models.EncryptedServiceCredential", "ServiceCredential")
                        .WithMany()
                        .HasForeignKey("ServiceCredentialId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("MediaEntry");

                    b.Navigation("ServiceCredential");
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.TitleOverride", b =>
                {
                    b.HasOne("DustyPig.Server.Data.Models.MediaEntry", "MediaEntry")
                        .WithMany("TitleOverrides")
                        .HasForeignKey("MediaEntryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DustyPig.Server.Data.Models.Profile", "Profile")
                        .WithMany("TitleOverrides")
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MediaEntry");

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.WatchlistItem", b =>
                {
                    b.HasOne("DustyPig.Server.Data.Models.MediaEntry", "MediaEntry")
                        .WithMany("WatchlistItems")
                        .HasForeignKey("MediaEntryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DustyPig.Server.Data.Models.Profile", "Profile")
                        .WithMany("WatchlistItems")
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MediaEntry");

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.Account", b =>
                {
                    b.Navigation("AccountTokens");

                    b.Navigation("EncryptedServiceCredentials");

                    b.Navigation("GetRequests");

                    b.Navigation("Libraries");

                    b.Navigation("Profiles");
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.Friendship", b =>
                {
                    b.Navigation("FriendLibraryShares");
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.Library", b =>
                {
                    b.Navigation("FriendLibraryShares");

                    b.Navigation("MediaEntries");

                    b.Navigation("ProfileLibraryShares");
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.MediaEntry", b =>
                {
                    b.Navigation("MediaSearchBridges");

                    b.Navigation("OverrideRequests");

                    b.Navigation("People");

                    b.Navigation("PlaylistItems");

                    b.Navigation("ProfileMediaProgress");

                    b.Navigation("Subscriptions");

                    b.Navigation("Subtitles");

                    b.Navigation("TitleOverrides");

                    b.Navigation("WatchlistItems");
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.Person", b =>
                {
                    b.Navigation("MediaBridges");
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.Playlist", b =>
                {
                    b.Navigation("PlaylistItems");
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.Profile", b =>
                {
                    b.Navigation("DeviceTokens");

                    b.Navigation("GetRequests");

                    b.Navigation("Notifications");

                    b.Navigation("OverrideRequests");

                    b.Navigation("Playlists");

                    b.Navigation("ProfileLibraryShares");

                    b.Navigation("ProfileMediaProgress");

                    b.Navigation("Subscriptions");

                    b.Navigation("TitleOverrides");

                    b.Navigation("WatchlistItems");
                });

            modelBuilder.Entity("DustyPig.Server.Data.Models.SearchTerm", b =>
                {
                    b.Navigation("SearchTermBridges");
                });
#pragma warning restore 612, 618
        }
    }
}
